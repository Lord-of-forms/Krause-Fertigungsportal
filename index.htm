<!DOCTYPE html>
<html>
<head>
    <title>Intranet - Fertigungsportal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.4/css/bulma.min.css">
    <style>
        /* Grundlegende Stile */
        .info-window {
            padding-top: 10px;
        }
        textarea {
            overflow-y: auto; /* Erlaubt das Scrollen */
            resize: none; /* Verhindert, dass der Benutzer die Größe manuell ändert */
            width: 100%; /* Setzt die Breite auf 100% des Elternelements */
            height: 150px; /* Start-Höhe */
            box-sizing: border-box; /* Stellt sicher, dass Padding und Border in der Breite und Höhe enthalten sind */
        }
        h1, h2, h3 {
            font-weight: bold;
        }


        /* Stile für Datum und Uhrzeit */
        .date-time-container {
            text-align: right;
            padding-right: 1rem;
            margin-bottom: 0.5rem;
        }

        .date-time-container #date {
            display: block;
            font-size: 20px; /* Schriftgröße für das Datum */
            font-weight: normal;
        }

        .date-time-container #time {
            display: block;
            font-size: 22px; /* Schriftgröße für die Uhrzeit */
            font-weight: bold;
        }


        .date-time-container span {
            display: block;
            font-weight: bold;
        }


        /* Stile für Untertitel */
        .subtitle {
            margin-top: 0.5rem;
            margin-bottom: 0.25rem;
        }


        /* Stile für den Abstand zwischen den Abschnitten */
        .section {
            margin-bottom: 1rem;
        }


        /* Stile für den oberen Abstand */
        .top-margin {
            margin-top: 0.5rem;
        }


        /* Stile für die Buttons */
        .button-link {
            margin-bottom: 0.5rem;
        }


        /* Stil für die einzelnen Info-Container */
        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px; /* Abstand zwischen den Zeilen */
        }


        /* Stil für die Checkboxen */
        .info-checkbox {
            margin-right: 10px; /* Abstand zwischen Checkbox und Datum */
        }


        /* Stil für den Text der Information */
        .info-text {
            flex-grow: 1;
        }


        /* Stil für die abwechselnde Zeilenfärbung */
        .info-item:nth-child(odd) {
            background-color: #ffffff; /* Weiß für ungerade Zeilen */
        }


        .info-item:nth-child(even) {
            background-color: #f2f2f2; /* Helles Grau für gerade Zeilen */
        }


        /* Stile für den Frame */
        .frame {
            position: fixed;
            left: 0;
            top: 0;
            width: 250px;
            height: 100%;
            background-color: #f4f4f4;
            overflow-y: auto;
            padding: 20px;
            box-shadow: 2px 0 5px rgba(12, 0, 0, 0.336);
        }


        .frame h3 {
            margin-bottom: 20px; /* Abstand zwischen Wichtige Links und ersten Link erhöhen */
        }


        .frame a {
            display: block;
            margin-bottom: 10px;
            color: #0c0b0b;
        }


        #visitCount {
        position: fixed;
        bottom: 10px;
        right: 10px;
        font-size: 10px;
        color: #666;
        background: rgba(255, 255, 255, 0.7);
        padding: 2px 5px;
        border-radius: 3px;
    } 
    </style>
</head>
<body>
    <div class="frame">
        <h3>Wichtige Links</h3>
        <a href="https://www.krause.de" title="Homepage Krause.">Krause Home</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/ankuendigungen.html" title="Aktuelle Nachrichten, Veranstaltungen und wichtige Termine.">Ankündigungen und Mitteilungen</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/interne_ressourcen.html" title="Zugriff auf Handbücher, Richtlinien und mehr.">Interne Ressourcen und Dokumente</a>
        <a href="file:///hg-srv-040.hg.intern\Telefonlisten" title="Kontaktinformationen / Telefonlisten">Kontaktinformationen</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/kalender_veranstaltungen.html" title="Interne Kalender mit geplanten Veranstaltungen.">Kalender und Veranstaltungen</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/urlaubsplanung.html" title="Urlaubsplanung Antrag und Übersichtstabelle.">Urlaubsplanung</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/leistungen_vorteile.html" title="Informationen über Mitarbeiterleistungen und Vergünstigungen.">Leistungen und Vorteile</a>
        <a href="file:///U:/Montage/Lagerplan.xlsx" title="Links zu externen Websites und Ressourcen.">Hallenplan / Lagerorte</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/schulungen_weiterbildung.html" title="Interne und externe Schulungsprogramme.">Schulungs- und Weiterbildungsmöglichkeiten</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/feedback_umfragen.html" title="Feedback geben, an Umfragen teilnehmen.">Feedback und Umfragen</a>
        <a href="https://www.krause.de/unternehmen/stellenanzeigen" title="Aktuelle Stellen bei Krause.">Stellenangebote</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Schwarzes Brett.html" title="Biete Suche.">Schwarzes Brett</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Schwarzes Brett.html" title="Kantine.">Kantine</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Betriebsvereinbahrungen.html" title="Betriebsvereinbahrungen.">Betriebsvereinbahrungen</a>
        <a href="https://krause-biagosch.hinweisgeber-biehn.de/" title="Regelverstöße und Gesetzesverletzungen melden.">Hinweisgebermeldestelle</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Optik.html" title="Wareneingang.">Wareneingang</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Optik.html" title="Inbetriebnahme.">Inbetriebnahme</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Optik.html" title="Optik Daten.">Optik</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Optik.html" title="Montage.">Montage</a>
        <a href="file:///U:/Montage/Optik/Fertigungsportal/Optik.html" title="Montage.">PQM</a>
    </div>


    <section class="section" style="margin-left: 250px;">
        <div class="container">
            <h1 class="title">Krause - Fertigungsportal</h1>
            <div class="date-time-container">
                <span id="date"></span>
                <span id="time"></span>

                <!-- Besucherzähler-HTML -->
                <div id="visitCount">BZähler: <span id="counter"></span></div>
            </div>

            <script>
                    function updateDateTime() {
        const now = new Date();
        const optionsDate = { dateStyle: 'medium' };
        const optionsTime = { timeStyle: 'medium', hour12: false };
        const formattedDate = now.toLocaleDateString('de-DE', optionsDate);
        const formattedTime = now.toLocaleTimeString('de-DE', optionsTime);
        document.getElementById('date').textContent = formattedDate;
        document.getElementById('time').textContent = formattedTime;
    }

    // Funktion zum Abrufen und Aktualisieren der Besucherzahl aus localStorage
    function updateVisitCount() {
        const counter = document.getElementById('counter');
        let visitCount = localStorage.getItem('visitCount');
        if (!visitCount) {
            visitCount = 0;
        }
        visitCount = parseInt(visitCount) + 1;
        localStorage.setItem('visitCount', visitCount);
        counter.textContent = visitCount;
    }

    document.addEventListener('DOMContentLoaded', function() {
        updateDateTime();
        setInterval(updateDateTime, 1000);
        updateVisitCount(); // Aufruf der Funktion zum Besucherzählen beim Laden der Seite
    });


                function autoResize() {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                }


                document.addEventListener('DOMContentLoaded', function() {
                    const textarea = document.querySelector('textarea');
                    textarea.addEventListener('input', autoResize);


                    const savedInfo = localStorage.getItem('currentInfo');
                    if (savedInfo) {
                        textarea.value = savedInfo;
                        autoResize.call(textarea);
                    }


                    textarea.addEventListener('input', function() {
                        localStorage.setItem('currentInfo', this.value);
                    });
                });


                function openInNewTab(url) {
                    window.open(url, '_blank');
                }


                function openFolder(folderPath) {
                    window.open("file:///" + folderPath.replace(/\\/g, '/'));
                }
            </script>
            <!-- Weitere interaktive Elemente und Informationen -->
            <h2 class="subtitle top-margin">Materialanforderung Zentrallager Krause</h2>
            <button class="button is-link button-link" style="background-color: #008080;" onclick="openInNewTab('https://script.google.com/macros/s/AKfycbziu_eSWx8KJkZYLh2dZxIqGkUXYJ-hTNFIdZXLzdE8YONzHYJrUiAzr-rzMJ5-HGyO/exec')">Materialentnahme Zentrallager Krause</button>
            <button class="button is-link button-link" style="background-color: #618b8b;" onclick="openInNewTab('https://docs.google.com/spreadsheets/d/1eK3qGUsnfFIWL5KpVG6KK2RWsSpwhgGS016zJkjOOKE/edit#gid=0')">Materialentnahme Zentrallager Tabelle</button>
            <button class="button is-link button-link" style="background-color: #618b8b;" onclick="openInNewTab('https://docs.google.com/document/d/1KptbXbopBimtGxGs6cswQ7dtFdqgGn3m6SuKVzIqAao/edit')">Gebrauchsanweisung Materialentnahme Zentrallager</button>
            <h2 class="subtitle">Bedarfsmeldung von Werkzeugen und Materialien</h2>
            <button class="button is-link button-link" style="background-color: #800080;" onclick="openInNewTab('https://forms.gle/2fdAZW8JV5SjWRfC7')">Eingabeformular zur Anforderung </button>
            <button class="button is-link button-link" style="background-color: #804d80;" onclick="openInNewTab('https://docs.google.com/spreadsheets/d/1j32b3IMpQv6PVp-LYc7FSGIzm49LKSnl8MZ7xgL0Jjg/edit#gid=1501778353')">Übersicht / Bestellstatus</button>
            <h2 class="subtitle">Formulare</h2>
            <button class="button is-link button-link" style="background-color: #f3a30d;" onclick="openInNewTab('https://forms.gle/jMNHwiFFTmAMu9x2A')">Formular zur Erfassung von Fehlern, Verbesserungsvorschlägen, Qualitätsmeldungen, Prozessverbesserungen und mehr</button>
            <button class="button is-link button-link" style="background-color: #808080;" onclick="openInNewTab('https://docs.google.com/forms/d/e/1FAIpQLSepdY5Itpdb8y3aIZNm3rb7Q8Szpm6iIL0f3BqWfSjrcO_E9Q/viewform')">Baugruppenanpassung</button>            
            <br>
            <h2 class="subtitle">Info</h2>            
            <button class="button is-link button-link" style="background-color: #cc5353;" onclick="openFolder('U:/Montage/Optik/Fertigungsportal/Gefahrstoffe.html')">Gefahrstoffe</button>
            <button class="button is-link button-link" style="background-color: #5f5aa1;" onclick="openFolder('U:/Montage/Optik/Fertigungsportal/Telefonlisten.html')">Telefonlisten</button>
            <button class="button is-link button-link" style="background-color: #569751; margin-left: 5px;" onclick="openFolder('U:/Montage/Optik/Fertigungsportal/Lieferplan.html')">Lieferplan</button>
            <button class="button is-link button-link" style="background-color: #4a86e8; margin-left: 5px;" onclick="openFolder('U:/Montage/Optik/Fertigungsportal/Prozesse.html')">Prozesse</button>
            <button class="button is-link button-link" style="background-color: #777904;" onclick="openInNewTab('https://script.google.com/macros/s/AKfycbwYT0FVdmJkvcnkzkzd3eeFdIeAeWsfvSkr5sKefvs4x_HrOkXkJds9PwwftwSMaZ2V/exec')">Mitarbeiterübersicht </button>            
            <div class="info-window">
                <h3 class="title">Aktuelle Informationen</h3>
                <button onclick="openInputModal()">Information hinzufügen</button>
                <button onclick="deleteSelected()">Ausgewählte löschen</button>
                <div id="info-display" style="overflow-y: auto; max-height: 300px;"></div>
            </div>

            <script>
<!-- Besucherzähler-JavaScript -->
function updateVisitCount() {
        let visitCount = localStorage.getItem('visitCount');
        if (visitCount === null) {
            visitCount = 0;
        }
        visitCount++;
        localStorage.setItem('visitCount', visitCount);
        document.getElementById('counter').textContent = visitCount;
    }

    updateVisitCount();

    updateVisitCount();

                // Funktion zum Überprüfen des Passworts
                function validePasswort(passwort) {
                    if (passwort === "alle") {
                        return true;
                    } else {
                        alert("Falsches Passwort!");
                        return false;
                    }
                }

// Funktion zum Öffnen des Eingabemodals
                function openInputModal() {
    const passwort = prompt("Bitte geben Sie das Passwort ein:");
    if (validePasswort(passwort)) {
        const userName = prompt("Bitte geben Sie Ihren Namen ein:");
        if (!userName) {
            alert("Bitte geben Sie Ihren Namen ein.");
            return;
        }
        const inputText = prompt("Bitte geben Sie die neue Information ein:");
        
        // Validierung der Benutzereingabe
        if (!inputText) {
            alert("Bitte geben Sie eine Information ein.");
            return;
        }

        const currentDate = new Date();
        const dateString = currentDate.toLocaleDateString('de-DE');
        addInfo(inputText, dateString, userName);
    }
}


                // Funktion zum Löschen ausgewählter Informationen
                function deleteSelected() {
                    const passwort = prompt("Bitte geben Sie das Passwort ein:");
                    if (validePasswort(passwort)) {
                        const checkboxes = document.querySelectorAll('.info-checkbox:checked');
                        if (checkboxes.length === 0) {
                            alert("Bitte wählen Sie mindestens eine Information zum Löschen aus.");
                            return;
                        }

                        checkboxes.forEach(function(checkbox) {
                            checkbox.parentElement.remove();
                        });
                        updateInfosInLocalStorage();
                        alert("Die markierten Informationen wurden gelöscht.");
                    }
                }

                // Funktion zum Bearbeiten von Informationen
                function editInfo(infoTextElement) {
    const passwort = prompt("Bitte geben Sie das Passwort ein:");
    if (validePasswort(passwort)) {
        const originalDate = infoTextElement.getAttribute('data-date');
        const originalText = infoTextElement.textContent;
        const newText = prompt("Bearbeiten Sie die Informationen:", originalText);

        if (newText) {
            // Überprüfen, ob das Datum bereits gesetzt ist
            const currentDate = new Date();
            const currentDateString = currentDate.toLocaleDateString('de-DE');
            const dateIndex = originalText.indexOf(currentDateString);
            let newInfoText = '';

            // Wenn das Datum bereits gesetzt ist, wird es nicht neu gesetzt
            if (dateIndex !== -1) {
                newInfoText = originalText.substring(0, dateIndex) + newText;
            } else {
                newInfoText = `${originalText} // ${currentDateString}: ${convertTextToHTML(newText)}`;
            }
            infoTextElement.innerHTML = newInfoText;
            updateInfoInLocalStorage(originalDate, newText);
        }
    } else {
        alert("Falsches Passwort!");
    }
}


                // Funktion zum Konvertieren von Text in HTML (URLs in Links umwandeln)
                function convertTextToHTML(text) {
                    const urlRegex = /(https?:\/\/[^\s]+)/g;
                    return text.replace(urlRegex, function(url) {
                        return '<a href="' + url + '" target="_blank">' + url + '</a>';
                    });
                }

                // Funktion zum Hinzufügen von Informationen
                function addInfo(text, date, userName) {
    // Überprüfen, ob der Text nicht leer ist
    if (!text.trim()) {
        alert("Bitte geben Sie eine Information ein.");
        return;
    }

    const infoContainer = document.getElementById('info-display');
    const newInfo = document.createElement('div');
    newInfo.className = 'info-item';

    const checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.className = 'info-checkbox';

    const infoText = document.createElement('span');
    infoText.className = 'info-text';
    infoText.innerHTML = `${date} - ${userName}: ${convertTextToHTML(text)}`;
    infoText.setAttribute('data-date', date);
    infoText.setAttribute('data-userName', userName);

    const editButton = document.createElement('button');
    editButton.textContent = 'Bearbeiten';
    editButton.onclick = function() { editInfo(infoText); };

    newInfo.appendChild(checkbox);
    newInfo.appendChild(infoText);
    newInfo.appendChild(editButton);
    infoContainer.appendChild(newInfo);

    // Speichern der Information im lokalen Speicher
    saveInfoToLocalStorage(date, text, userName);
}


                // Funktion zum Speichern von Informationen im lokalen Speicher
                function saveInfoToLocalStorage(date, text, userName) {
                    let infos = JSON.parse(localStorage.getItem('currentInfos')) || [];

                    // Überprüfen auf Duplikate
                    const isDuplicate = infos.some(info => info.text === text && info.date === date && info.userName === userName);
                    if (!isDuplicate) {
                        infos.push({ date: date, text: text, userName: userName });
                        localStorage.setItem('currentInfos', JSON.stringify(infos));
                    }
                }

                // Funktion zum Aktualisieren von Informationen im lokalen Speicher
                function updateInfoInLocalStorage(originalDate, newText) {
                    let infos = JSON.parse(localStorage.getItem('currentInfos')) || [];
                    const index = infos.findIndex(info => info.date === originalDate);

                    if (index !== -1) {
                        infos[index].text = newText;
                        localStorage.setItem('currentInfos', JSON.stringify(infos));
                    }
                }

                // Funktion zum Löschen von Informationen aus dem lokalen Speicher
                function deleteInfoFromLocalStorage(date, text) {
    let infos = JSON.parse(localStorage.getItem('currentInfos')) || [];
    const index = infos.findIndex(info => info.date === date && info.text === text);

    if (index !== -1) {
        infos.splice(index, 1);
        localStorage.setItem('currentInfos', JSON.stringify(infos));
    }
}


// Funktion zum Laden von Informationen aus dem lokalen Speicher
function loadInfosFromLocalStorage() {
    let infos = JSON.parse(localStorage.getItem('currentInfos')) || [];
    const infoContainer = document.getElementById('info-display');
    infoContainer.innerHTML = '';

    // Entfernen von Duplikaten
    const uniqueInfos = Array.from(new Set(infos.map(JSON.stringify))).map(JSON.parse);

    uniqueInfos.forEach(info => {
        addInfo(info.text, info.date, info.userName);
    });
}

// Funktion zum Aktualisieren aller Informationen im lokalen Speicher
function updateInfosInLocalStorage() {
    const infoItems = document.querySelectorAll('.info-item');
    const infos = Array.from(infoItems).map(function(item) {
        const date = item.querySelector('.info-text').getAttribute('data-date');
        const text = item.querySelector('.info-text').textContent;
        return { date, text };
    });

    localStorage.setItem('currentInfos', JSON.stringify(infos));
}

// Ereignislistener für das Laden der Seite
document.addEventListener('DOMContentLoaded', function() {
    loadInfosFromLocalStorage();
});

    // Funktion zum Abrufen und Aktualisieren der Besucherzahl aus localStorage
    function updateVisitCount() {
        const counter = document.getElementById('counter');
        let visitCount = localStorage.getItem('visitCount');
        if (!visitCount) {
            visitCount = 0;
        }
        visitCount = parseInt(visitCount) + 1;
        localStorage.setItem('visitCount', visitCount);
        counter.textContent = visitCount;
    }

    // Ereignislistener, um die Funktion beim Laden der Seite auszuführen
    document.addEventListener('DOMContentLoaded', updateVisitCount);

</script>
</body>
</html>
